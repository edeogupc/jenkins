pipeline{
    agent any
    environment{
        SONAR_HOME = tool('sonar-scanner')
    }

    stages{

        stage("cleanup"){
            steps{
                
                cleanWs()
            }
        }
        stage("checkout"){
            steps{
                git branch: "main", url: "https://github.com/edeogupc/jenkins.git"
            }
        }
        stage("static code anayysis"){
            steps{
                withSonarQubeEnv('SonarQube') {
                    sh '''
                
                       ${SONAR_HOME}/bin/sonar-scanner \
                        -Dsonar.projectName="zoba" \
                        -Dsonar.projectKey="zoba"
    
                    '''


 
                 }
            }
        }
        stage("wait for quality gate"){
            steps{
                
                script{
                    timeout(time: 5, unit: 'MINUTES') {
                       def ret = waitForQualityGate() 
                       if (ret.status != 'OK') {
                          error "The job failed because of quality gate status: ${ret.status}"
                        }
                    }
                }
            }
        }
        stage("trivy scan"){
            steps{
                sh ' trivy fs --exit-code 1 --severity critical .'
            }
        }



    }
    
    }
